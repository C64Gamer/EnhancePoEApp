{
  "runtime": "Net70",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "openapi: 3.0.0\r\n# Added by API Auto Mocking Plugin\r\nservers:\r\n# Added by API Auto Mocking Plugin\r\n  - description: PathofExile Official Site\r\n    url: https://www.pathofexile.com\r\n  - description: PathofExile Official Site Russian\r\n    url: https://ru.pathofexile.com\r\n  - description: Garena Taiwan Site\r\n    url: https://web.poe.garena.tw\r\n  - description: Tencent China Site\r\n    url: https://poe.game.qq.com\r\n  - description: SwaggerHub API Auto Mocking\r\n    url: https://virtserver.swaggerhub.com/Chuanhsing/poe/1.0.0\r\ninfo:\r\n  description: |\r\n    This is a sample PathofExile API.\r\n    You can get new API updates from https://www.pathofexile.com/forum/view-forum/674 and\r\n    https://www.pathofexile.com/developer/docs/\r\n  version: \"1.0.0\"\r\n  title: PathofExile API\r\n  contact:\r\n    url: 'https://github.com/Chuanhsing/poe-api/'\r\n  license:\r\n    name: Apache 2.0\r\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\r\ncomponents:\r\n  securitySchemes:\r\n    cookieAuth:\r\n      type: apiKey\r\n      in: cookie\r\n      name: POESESSID  # cookie name\r\n      description: Priavte mode account need session to get information\r\n  schemas:\r\n    AccountName:\r\n      type: string\r\n      example: Chris\r\n    AccessToken:\r\n      type: string\r\n      description: access token from OAuth\r\n      example: 0123456789012345678901234567890123456789\r\n    UserAgent:\r\n      type: string\r\n      description: |\r\n        requested by ggg https://www.pathofexile.com/forum/view-thread/3019033/page/1#p23790007\r\n      default: \"OAuth mypoeapp/1.0.0 (contact: mypoeapp@gmail.com)\"\r\n    Realms:\r\n      description: |\r\n        The realm of the leagues\r\n      type: string\r\n      enum:\r\n        - pc\r\n        - xbox\r\n        - sony\r\n      default: pc\r\n    LeagueNames:\r\n      type: string\r\n      enum:\r\n        - Standard\r\n        - Hardcore\r\n        - Crucible\r\n        - Hardcore Crucible\r\n        - SSF Standard\r\n        - SSF Hardcore\r\n        - SSF Crucible\r\n        - SSF Crucible HC\r\n    League:\r\n      type: object\r\n      properties:\r\n        id:\r\n          $ref: '#/components/schemas/LeagueNames'\r\n        realm:\r\n          $ref: '#/components/schemas/Realms'\r\n        description:\r\n          type: string\r\n          example: The default game mode\r\n        registerAt:\r\n          type: string\r\n          example: \"2019-09-06T19:00:00Z\"\r\n        url:\r\n          type: string\r\n          example: https://www.pathofexile.com/forum/view-thread/71278\r\n        startAt:\r\n          type: string\r\n          example: \"2013-01-23T21:00:00Z\"\r\n        endAt:\r\n          type: string\r\n        delveEvent:\r\n          type: boolean\r\n        rules:\r\n          type: array\r\n          items:\r\n            $ref: \"#/components/schemas/LeagueRule\"\r\n    LeagueRule:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: string\r\n          example: Hardcore\r\n        name:\r\n          type: string\r\n          example: Hardcore\r\n        description:\r\n          type: string\r\n          example: A character killed in Hardcore is moved to its parent league.\r\n    Characters:\r\n      type: array\r\n      items:\r\n        type: object\r\n        properties:\r\n          name:\r\n            type: string\r\n          league:\r\n            $ref: \"#/components/schemas/LeagueNames\"\r\n          classId:\r\n            type: integer\r\n            example: 3\r\n          ascendancyClass:\r\n            type: integer\r\n            example: 3\r\n          class:\r\n            type: string\r\n            example: Necromancer\r\n          level:\r\n            type: integer\r\n            example: 92\r\n          experience:\r\n            type: integer\r\n            example: 2273293803\r\n    PublicStashTab:\r\n      type: object\r\n      properties:\r\n        next_change_id:\r\n          type: string\r\n        stashes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/Stash'\r\n    Stash:\r\n      type: object\r\n      properties:\r\n        accountName:\r\n          $ref: \"#/components/schemas/AccountName\"\r\n        lastCharacterName:\r\n          type: string\r\n        id:\r\n          type: string\r\n        stash:\r\n          type: string\r\n        items:\r\n          $ref: \"#/components/schemas/Items\"\r\n        public:\r\n          type: boolean\r\n    StashItems:\r\n      type: object\r\n      properties:\r\n        numTabs:\r\n          type: integer\r\n        items:\r\n          $ref: \"#/components/schemas/Items\"\r\n    Guild:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: string\r\n        name:\r\n          type: string\r\n        tag:\r\n          type: string\r\n    PointTransaction:\r\n      type: object\r\n      properties:\r\n        total:\r\n          type: integer\r\n        entries:\r\n          type: array\r\n          items:\r\n            type: object\r\n    StashHistory:\r\n      type: object\r\n      properties:\r\n        total:\r\n          type: integer\r\n        entries:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              id:\r\n                type: string\r\n              time:\r\n                type: integer\r\n              league:\r\n                type: string\r\n              item:\r\n                type: string\r\n              action:\r\n                type: string\r\n              account:\r\n                type: object\r\n                properties:\r\n                  name:\r\n                    type: string\r\n                  realm:\r\n                    $ref: '#/components/schemas/Realms'\r\n                  guild:\r\n                    $ref: '#/components/schemas/Guild'\r\n    Season:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: string\r\n          example: Race Season One\r\n        startAt:\r\n          type: string\r\n          example: \"2013-02-20T05:47:21Z\"\r\n        endAt:\r\n          type: string\r\n          example: \"2013-02-20T05:47:21Z\"\r\n        htmlId:\r\n          type: string\r\n          example: race-season-one\r\n        htmlContent:\r\n          type: string\r\n          nullable: true\r\n        rewards:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              requiredPoints:\r\n                type: integer\r\n              item:\r\n                $ref: \"#/components/schemas/Item\"\r\n              itemOffsetX:\r\n                type: integer\r\n              itemOffsetY:\r\n                type: integer\r\n    Ladder:\r\n      type: object\r\n      properties:\r\n        rank:\r\n          type: integer\r\n        dead:\r\n          type: boolean\r\n        online:\r\n          type: boolean\r\n        character:\r\n          type: object\r\n          properties:\r\n            id:\r\n              type: string\r\n            name:\r\n              type: string\r\n            level:\r\n              type: integer\r\n            class:\r\n              type: string\r\n            time:\r\n              type: integer\r\n            score:\r\n              type: integer\r\n            experience:\r\n              type: integer\r\n        account:\r\n          type: object\r\n          properties:\r\n            name:\r\n              $ref: '#/components/schemas/AccountName'\r\n            realm:\r\n              $ref: '#/components/schemas/Realms'\r\n            challenges:\r\n              type: object\r\n              properties:\r\n                total:\r\n                  type: integer\r\n    Ladders:\r\n      type: object\r\n      properties:\r\n        total:\r\n          type: integer\r\n        entrie:\r\n          type: array\r\n          items:\r\n            type: array\r\n            items:\r\n              $ref: \"#/components/schemas/Ladder\"\r\n    Items:\r\n      type: array\r\n      items:\r\n        $ref: \"#/components/schemas/Item\"\r\n    Item:\r\n      type: object\r\n      properties:\r\n        verified: \r\n          type: boolean\r\n          description: true if the item has not changed since it was linked.\r\n        w:\r\n          type: number\r\n          description: Width of the item in inventory tiles.\r\n        h:\r\n          type: number\r\n          description: Height of the item in inventory tiles.\r\n        ilvl:\r\n          type: number\r\n          description: item level\r\n        icon:\r\n          type: string\r\n          description: url to the image of the item\r\n        league:\r\n          type: string\r\n          description: league identifier\r\n        id:\r\n          type: string\r\n          format: uuid\r\n        elder:\r\n          type: boolean\r\n          description: true if the item can have elder mods (elder background).\r\n        shaper:\r\n          type: boolean\r\n          description: true if the item can have shaper mods (shaper background).\r\n        fractured:\r\n          type: boolean\r\n          description: true if the item can have fractured mods (fractured background).\r\n        sockets:\r\n          type: object\r\n          properties:\r\n            group:\r\n              type: number\r\n              description: Every socket that has the same group is linked.\r\n            attr:\r\n              description: attributes e.g. dex, int, strength\r\n              anyOf:\r\n                - type: string\r\n                  enum: \r\n                    - D\r\n                    - I\r\n                    - S\r\n                  description: >\r\n                    Possible values:\r\n                      * `D` - dexterity\r\n                      * `I` - intelligence\r\n                      * `S` - strength\r\n                - type: boolean\r\n                  description: abyss sockets don't have attributes\r\n            sColour:\r\n              type: string\r\n              enum:\r\n                - B\r\n                - G\r\n                - R\r\n                - W\r\n                - A\r\n              description: >\r\n                Possible values:\r\n                  - `B` - blue\r\n                  - `G` - green\r\n                  - `R` - red\r\n                  - `W` - white\r\n                  - `A` - abyss\r\n        name:\r\n          type: string\r\n          description: unique name of the item\r\n        typeLine:\r\n          type: string\r\n          description: name of the baseitem (+prefix/suffix if existing)\r\n        identified:\r\n          type: boolean\r\n          description: true if the item is identified\r\n        corrupted:\r\n          type: boolean\r\n          description: true if the item is corrupted\r\n        properties:\r\n          type: array\r\n          items:\r\n            $ref: \"#/components/schemas/ItemLineContent\"\r\n        utilityMods:\r\n          type: array\r\n          description: \\\"Implicit\\\" mods for flasks.\r\n          items:\r\n            type: string\r\n        explicitMods:\r\n          type: array\r\n          items:\r\n            type: string\r\n        craftedMods:\r\n          type: array\r\n          items:\r\n            type: string\r\n          description: master crafted mods\r\n        enchantMods:\r\n          type: array\r\n          items:\r\n            type: string\r\n          description: enchantments\r\n        fracturedMods:\r\n          type: array\r\n          items:\r\n            type: string\r\n          description: fractured mods\r\n        flavourText:\r\n          type: array\r\n          items:\r\n            type: string\r\n          description: Array of lines of the flavour text of e.g. unique items.\r\n        descrText:\r\n          type: string\r\n          description: description\r\n        secDescrText:\r\n          type: string\r\n          description: secondary description\r\n        frameType:\r\n          type: number\r\n          enum:\r\n            - 0\r\n            - 1\r\n            - 2\r\n            - 3\r\n            - 4\r\n          description: > \r\n            Frame \"color\" of the item depending on rarity, item type (e.g. gem) etc.\r\n\r\n            Possible values with examples:\r\n              * `0` - normal items\r\n              * `1` - magic items\r\n              * `2` - rare items\r\n              * `3` - unique items\r\n              * `4` - gems\r\n        category:\r\n          description: > \r\n            Should only contain one property which is the \"superclass\" and an array\r\n            where the only member is the \"subclass\"\r\n          type: object\r\n          additionalProperties:\r\n            type: array\r\n            items:\r\n              type: string\r\n        x:\r\n          type: number\r\n          description: \"X coordinate in the specified frame.\"\r\n        y:\r\n          type: number\r\n          description: \"Y coordinate in the specified frame.\"\r\n        inventoryId:\r\n          type: string\r\n          description: >\r\n            Id of the slot where this item is located. `StashX` for stash number `X`.\r\n            `BodyArmour`, `Flask` etc for actual inventory slots.\r\n        isRelic:\r\n          type: boolean\r\n          description: true if the item is a relic item (introduced in Legacy league).\r\n        socketetedItems:\r\n          type: array\r\n          items:\r\n            $ref: \"#/components/schemas/Item\"\r\n          description: >\r\n            List of items that are socketed into the sockets of the item. The \r\n            schema has an additional property __socket__ which contains the \r\n            socket index.\r\n        socket:\r\n          type: number\r\n          description: Socket index in the parent item in which this item is socketed.\r\n        colour:\r\n          type: string\r\n          description: >\r\n            gem colour (originates from attribute requirement):\r\n              * `D` - green\r\n              * `I` - blue\r\n              * `S` - red \r\n              * `G` - white\r\n          enum:\r\n            - D\r\n            - I\r\n            - S\r\n            - G\r\n    ItemLineContent:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        values:\r\n          type: array\r\n          description: >\r\n            Tuple where the first value is the display string.\r\n            The second value describes how the value should be displayed:\r\n              * 0 - white (simple) text\r\n              * 1 - blue (augmented) text\r\n              * 4 - red (fire damage) text\r\n              * 5 - blue (cold damage) text\r\n              * 6 - yellow (lightning damage) text\r\n              * 7 - red-violet (chaos damage) text\r\n          items:\r\n            type: array\r\n            minItems: 2\r\n            maxItems: 2\r\n            items:\r\n              anyOf:\r\n                - type: string\r\n                - type: number\r\n        displayMode:\r\n          type: number\r\n          description: >\r\n            Possible values:\r\n              * 0 - `name` should be displayed as \\`${name}: ${values.join(', ')}\\` if \r\n                  values.length > 0 otherwise just '${name}'\r\n              * 1 - `name` should be displayed as \\`${values[0]} ${name}\\`\r\n              * 2 - `name__ should be display as \\`${progressBar(values[0])} ${values[0]}\\`\r\n                    i.e. `name` is not displayed\r\n              * 3 - `name` field contains placeholders for the values in\r\n                      the format of `%\\d`. The number nth value in `values` (0-based)\r\n          enum:\r\n            - 0\r\n            - 1\r\n            - 2\r\n            - 3\r\n        type:\r\n          type: number\r\n          description: The order in which the lines should be displayed\r\n    ShowCasePins:\r\n      type: object\r\n      properties:\r\n        total:\r\n          type: integer\r\n        account:\r\n          type: string\r\n        entries:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/ShowCasePin'\r\n    ShowCasePin:\r\n      type: object\r\n      properties:\r\n        character_id:\r\n          type: string\r\n        foreign_id:\r\n          type: string\r\n        position:\r\n          type: integer\r\n        type:\r\n          type: string\r\n        label:\r\n          type: string\r\n        id:\r\n          type: string\r\n        icon:\r\n          type: string\r\n    AccountAvatars:\r\n      type: object\r\n      properties:\r\n        total:\r\n          type: integer\r\n          example: 69\r\n        collection:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AccountAvatar'\r\n    AccountAvatar:\r\n      type: object\r\n      properties:\r\n        custom:\r\n          type: boolean\r\n        avatar_id:\r\n          type: integer\r\n          example: 69\r\n        image:\r\n          type: string\r\n          example: https://www.pathofexile.com/gen/image/WzAsMSx7ImlkIjo2OSwic2l6ZSI6ImF2YXRhciJ9XQ/3121a0cc75/Path_of_Exile_Gallery_Image.jpg\r\n        current:\r\n          type: boolean\r\n    Stream:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          example: Mathil1\r\n        image:\r\n          type: string\r\n          example: https://static-cdn.jtvnw.net/previews-ttv/live_user_mathil1-320x180.jpg\r\n        status:\r\n          type: string\r\n          example: Mathil - Crit bleed/rupture Puncture Deadeye, crafting/figuring it out\r\n        viewers:\r\n          type: integer\r\n          example: 4025\r\n        id:\r\n          type: string\r\n          example: 25575995\r\n        url:\r\n          type: string\r\n          example: https://twitch.tv/mathil1\r\n    Profile:\r\n      type: object\r\n      properties:\r\n        uuid:\r\n          type: string\r\n          nullable: true\r\n        name:\r\n          $ref: '#/components/schemas/AccountName'\r\n        realm:\r\n          $ref: '#/components/schemas/Realms'\r\n        guild:\r\n          type: object\r\n          properties:\r\n            name:\r\n              type: string\r\n    Specials:\r\n      type: object\r\n      properties:\r\n        total:\r\n          type: integer\r\n        entries:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/Microtransaction'\r\n    Microtransaction:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n        startAt:\r\n          type: string\r\n        endAt:\r\n          type: string\r\n        imageUrl:\r\n          type: string\r\n        url:\r\n          type: string\r\n        description:\r\n          type: string\r\n        specialType:\r\n          type: string\r\n        cost:\r\n          type: integer\r\n        countdownSpecial:\r\n          type: boolean\r\n        countdownImage:\r\n          type: string\r\n        priority:\r\n          type: integer\r\n        platform:\r\n          type: string\r\n        microtransaction:\r\n          type: object\r\n          properties:\r\n            id:\r\n              type: string\r\n            name:\r\n              type: string\r\n            description:\r\n              type: string\r\n            cost:\r\n              type: integer\r\n            guild:\r\n              type: boolean\r\n        category:\r\n          type: boolean\r\n    TradeDataLeagues:\r\n      type: object\r\n      properties:\r\n        result:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              id:\r\n                type: string\r\n                example: Standard\r\n              text:\r\n                type: string\r\n                example: Standard\r\n    TradeDataItems:\r\n      type: object\r\n      properties:\r\n        result:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              label:\r\n                type: string\r\n                example: Accessories\r\n              entries:\r\n                type: array\r\n                items:\r\n                  type: object\r\n                  properties:\r\n                    name:\r\n                      type: string\r\n                      example: Ahkeli's Meadow\r\n                    type:\r\n                      type: string\r\n                      example: Ruby Ring\r\n                    text:\r\n                      type: string\r\n                      example: Ahkeli's Meadow Ruby Ring\r\n                    flags:\r\n                      type: object\r\n                      properties:\r\n                        unique:\r\n                          type: boolean\r\n                        prophecy:\r\n                          type: boolean\r\n                          example: false\r\n    TradeDataStats:\r\n      type: object\r\n      properties:\r\n        result:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              label:\r\n                type: string\r\n                example: Pseudo\r\n              entries:\r\n                type: array\r\n                items:\r\n                  type: object\r\n                  properties:\r\n                    id:\r\n                      type: string\r\n                      example: pseudo.pseudo_total_cold_resistance\r\n                    text:\r\n                      type: string\r\n                      example: +#% total to Cold Resistance\r\n                    type:\r\n                      type: string\r\n                      example: pseudo\r\n    TradeDataStatic:\r\n      type: object\r\n      properties:\r\n        result:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              id:\r\n                type: string\r\n                example: Currency\r\n              label:\r\n                type: string\r\n                example: Currency\r\n              entries:\r\n                type: array\r\n                items:\r\n                  type: object\r\n                  properties:\r\n                    id:\r\n                      type: string\r\n                      example: alt\r\n                    text:\r\n                      type: string\r\n                      example: Orb of Alteration\r\n                    image:\r\n                      type: string\r\n                      example: /image/Art/2DItems/Currency/CurrencyRerollMagic.png?v=6d9520174f6643e502da336e76b730d3\r\n    TradeChangeIDS:\r\n      type: object\r\n      properties:\r\n        psapi:\r\n          type: string\r\n          example: \"1227105106-1231696377-1189586900-1330788009-1278983122\"\r\n        forum:\r\n          type: string\r\n          example: \"23702876\"\r\n    SearchSource:\r\n      type: object\r\n      properties:\r\n        query:\r\n          type: object\r\n          properties:\r\n            filters:\r\n              type: object\r\n              description: not required\r\n              properties:\r\n                trade_filters:\r\n                  type: object\r\n                  properties:\r\n                    disabled:\r\n                      type: boolean\r\n                      enum: [false, true]\r\n                    filters:\r\n                      type: object\r\n                      properties:\r\n                        price:\r\n                          type: object\r\n                          properties:\r\n                            min:\r\n                              type: integer\r\n                              example: 1\r\n                            max:\r\n                              type: integer\r\n                              example: 30\r\n            status:\r\n              type: object\r\n              description: not required\r\n              properties:\r\n                option:\r\n                  type: string\r\n                  enum: [online,any]\r\n                  default: online\r\n            stats:\r\n              type: array\r\n              description: not required\r\n              items:\r\n                $ref: \"#/components/schemas/SearchSourceStats\"\r\n            name:\r\n              type: string\r\n              example: Tabula Rasa\r\n            type:\r\n              type: string\r\n              example: Simple Robe\r\n        sort:\r\n          type: object\r\n          description: not required\r\n          properties:\r\n            price:\r\n              type: string\r\n              example: asc\r\n              default: asc\r\n    SearchSourceStats:\r\n      type: object\r\n      properties:\r\n        type:\r\n          type: string\r\n          example: and\r\n        filters:\r\n          type: array\r\n          items:\r\n            type: string\r\n          example: []\r\n    SearchResult:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: string\r\n          example: Wqn2LKFm\r\n        result:\r\n          type: array\r\n          items:\r\n            type: string\r\n          example: [c593ccc98580e892eb0745048a8378927b452070e91da03139a00d450eca7477,e1105792ac87113b20487d7cb2d5b9fd43f40b3bdd8a55780acbaaad513c9b65]\r\n        total:\r\n          type: integer\r\n          example: 1\r\npaths:\r\n  /oauth/authorize:\r\n    get:\r\n      tags:\r\n        - OAuth\r\n      description: Generate an authorization URL and allow the user to navigate to it\r\n      summary: OAuth 2.0 API\r\n      parameters:\r\n        - name: client_id\r\n          in: query\r\n          description: is your registered application's client id.\r\n          schema:\r\n            type: string\r\n            example: example\r\n        - name: response_type\r\n          in: query\r\n          description: is always `code`.\r\n          schema:\r\n            type: string\r\n            enum: [code]\r\n            default: code\r\n        - name: scope\r\n          in: query\r\n          description: is a space-separated list of requested scopes.\r\n          schema:\r\n            type: string\r\n            example: account:profile\r\n        - name: state\r\n          in: query\r\n          description: is a code or hash that you generate to validate the request.\r\n          schema:\r\n            type: string\r\n            example: 10ceb8104963e91e47a95f4138448ecf\r\n        - name: redirect_uri\r\n          in: query\r\n          description: is the URL that you want the result of the authorization request to be sent to.\r\n          schema:\r\n            type: string\r\n            example: https://example.com\r\n        - name: prompt\r\n          in: query\r\n          description: |\r\n            can either be `consent` (the default) or `none`:\r\n            * `consent` will ask the user for consent after making sure they're logged in.\r\n            * `none` will attempt to re-authorize the request with existing consent. If this is not possible then an error response is immediately returned without the user being prompted.\r\n          schema:\r\n            type: string\r\n            example: consent\r\n            default: consent\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json: {}\r\n  /oauth/token:\r\n    post:\r\n      tags:\r\n        - OAuth\r\n      description: use client_id and client_secret to get oauth token\r\n      summary: OAuth 2.0 API\r\n      parameters:\r\n        - name: grant_type\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: string\r\n            enum: [authorization_code, client_credentials, refresh_token]\r\n        - name: code\r\n          description: client code, used when grant_type equal client_credentials\r\n          in: query\r\n          required: false\r\n          schema:\r\n            type: string\r\n        - name: refresh_token\r\n          description: used when grant_type equal refresh_token\r\n          in: query\r\n          required: false\r\n          schema:\r\n            type: string\r\n        - name: client_id\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: string\r\n        - name: client_secret\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: string\r\n        - name: redirect_uri\r\n          in: query\r\n          required: false\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  access_token:\r\n                    $ref: '#/components/schemas/AccessToken'\r\n                  expires_in:\r\n                    type: integer\r\n                    example: 2419200\r\n                  token_type:\r\n                    type: string\r\n                    example: bearer\r\n                  scope:\r\n                    type: string\r\n                    example: service:psapi\r\n  /oauth/token/revoke:\r\n    post:\r\n      summary: OAuth 2.0 API\r\n      tags:\r\n        - OAuth\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json: {}\r\n  /oauth/token/introspect:\r\n    post:\r\n      summary: OAuth 2.0 API\r\n      tags:\r\n        - OAuth\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json: {}\r\n  /character-window/get-characters:\r\n    get:\r\n      tags:\r\n        - Characters\r\n      security:\r\n        - cookieAuth: []\r\n      summary: Get Characters\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n        - name: accountName\r\n          in: query\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/AccountName'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Characters'\r\n  /character-window/get-items:\r\n    get:\r\n      tags:\r\n        - Characters\r\n      security:\r\n        - cookieAuth: []\r\n      summary: Get Equipment Items\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n        - name: accountName\r\n          in: query\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/AccountName'\r\n        - name: character\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: string\r\n            example: Morrigan\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Items\"\r\n  /character-window/get-passive-skills:\r\n    get:\r\n      tags:\r\n        - Characters\r\n      security:\r\n        - cookieAuth: []\r\n      summary: Get Passive Skills\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n        - name: accountName\r\n          in: query\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/AccountName'\r\n        - name: character\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: string\r\n            example: Morrigan\r\n        - name: reqData\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: number\r\n            enum: [0, 1]\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json: {}\r\n  /character-window/get-stash-items:\r\n    get:\r\n      tags:\r\n        - Account\r\n      security:\r\n        - cookieAuth: []\r\n      summary: Get Stash Items\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n        - name: league\r\n          in: query\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/LeagueNames'\r\n        - name: realm\r\n          in: query\r\n          required: false\r\n          schema:\r\n            $ref: '#/components/schemas/Realms'\r\n        - name: accountName\r\n          in: query\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/AccountName'\r\n        - name: tabs\r\n          in: query\r\n          description: '{0,1} 1 to shows tabs name, position, colors'\r\n          required: true\r\n          schema:\r\n            type: number\r\n            enum: [0, 1]\r\n        - name: tabIndex\r\n          in: query\r\n          description: '{0,...,N}'\r\n          required: true\r\n          schema:\r\n            type: number\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/StashItems'\r\n  /character-window/get-mtx-stash-items:\r\n    get:\r\n      tags:\r\n        - Account\r\n      security:\r\n        - cookieAuth: []\r\n      summary: Get MTXs\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n        - name: realm\r\n          in: query\r\n          required: false\r\n          schema:\r\n            $ref: '#/components/schemas/Realms'\r\n        - name: sortOrder\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: string\r\n            enum: [category, theme]\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json: {}\r\n  /character-window/get-account-name-by-character:\r\n    get:\r\n      tags:\r\n        - Account\r\n      security:\r\n        - cookieAuth: []\r\n      summary: ABANDON, Get Account Name\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n        - name: character\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: string\r\n          example: QuillHitman\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  accountName:\r\n                    $ref: '#/components/schemas/AccountName'\r\n  /character-window/view-atlas-skill-tree:\r\n    get:\r\n      tags:\r\n        - Account\r\n      security:\r\n        - cookieAuth: []\r\n      summary: Get Account Atlas Skill Tree\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n        - name: league\r\n          in: query\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/LeagueNames'\r\n        - name: realm\r\n          in: query\r\n          required: false\r\n          schema:\r\n            $ref: '#/components/schemas/Realms'\r\n        - name: accountName\r\n          in: query\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/AccountName'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n  /api/account-avatar:\r\n    get:\r\n      tags:\r\n        - Account\r\n      security:\r\n        - cookieAuth: []\r\n      summary: Get Account Acatar\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n        - name: page\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            default: 1\r\n            minimum: 1\r\n        - name: perPage\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            default: 16\r\n            maximum: 16\r\n        - name: custom\r\n          description: true only custom avatars (supporter avatars) of the account will be fetched\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: boolean\r\n            default: false\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/AccountAvatars'\r\n  /api/account/showcase-pins:\r\n    get:\r\n      tags:\r\n        - Account\r\n      security:\r\n        - cookieAuth: []\r\n      summary: Get Showcase Pins\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n        - name: offset\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: integer\r\n        - name: limit\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: integer\r\n        - name: realm\r\n          in: query\r\n          required: false\r\n          schema:\r\n            $ref: '#/components/schemas/Realms'\r\n        - name: account\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/ShowCasePins'\r\n  /api/profile:\r\n    get:\r\n      tags:\r\n        - Account\r\n      security:\r\n        - cookieAuth: []\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n        - name: access_token\r\n          in: query\r\n          required: false\r\n          schema:\r\n            $ref: '#/components/schemas/AccessToken'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Profile'\r\n  /account/view-profile/{accountName}/stashes:\r\n    get:\r\n      summary: unique stash\r\n      description: parse stashId from html and request /account/view-stash/{accountName}/{stashId}\r\n      tags:\r\n        - Account\r\n      security:\r\n        - cookieAuth: []\r\n      parameters:\r\n        - name: accountName\r\n          in: path\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/AccountName'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            text/html: {}\r\n  /account/view-stash/{accountName}/{stashId}:\r\n    get:\r\n      summary: unique stash\r\n      description: parse items from html\r\n      tags:\r\n        - Account\r\n      security:\r\n        - cookieAuth: []\r\n      parameters:\r\n        - name: accountName\r\n          in: path\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/AccountName'\r\n        - name: stashId\r\n          in: path\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            text/html: {}\r\n  /api/guild:\r\n    get:\r\n      summary: Get Guild\r\n      tags:\r\n        - Guild\r\n      security:\r\n        - cookieAuth: []\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Guild\"\r\n  /api/account/guild/point-transactions:\r\n    get:\r\n      tags:\r\n        - Guild\r\n      summary: Get Account Point Transactions\r\n      security:\r\n        - cookieAuth: []\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/PointTransaction'\r\n  /api/guild/point-transactions:\r\n    get:\r\n      tags:\r\n        - Guild\r\n      summary: Get Point Transactions\r\n      security:\r\n        - cookieAuth: []\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/PointTransaction'\r\n  /api/guild/{guildid}/stash/history:\r\n    get:\r\n      tags:\r\n        - Guild\r\n      summary: List guild stash history\r\n      security:\r\n        - cookieAuth: []\r\n      parameters:\r\n        - name: guildid\r\n          in: path\r\n          required: true\r\n          schema:\r\n            type: string\r\n        - name: from\r\n          in: query\r\n          required: false\r\n          description: unix timestamp\r\n          schema:\r\n            type: string\r\n        - name: fromid\r\n          in: query\r\n          required: false\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/StashHistory'\r\n  /character-window/get-guild-stash-items:\r\n    get:\r\n      tags:\r\n        - Guild\r\n      security:\r\n        - cookieAuth: []\r\n      summary: Get Guild Stash Items\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n        - name: league\r\n          in: query\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/LeagueNames'\r\n        - name: realm\r\n          in: query\r\n          required: false\r\n          schema:\r\n            $ref: '#/components/schemas/Realms'\r\n        - name: accountName\r\n          in: query\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/AccountName'\r\n        - name: tabs\r\n          in: query\r\n          description: '{0,1} 1 to shows tabs name, position, colors'\r\n          required: true\r\n          schema:\r\n            type: number\r\n            enum: [0, 1]\r\n        - name: tabIndex\r\n          in: query\r\n          description: '{0,...,N}'\r\n          required: true\r\n          schema:\r\n            type: number\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/StashItems'\r\n  /api/seasons:\r\n    get:\r\n      tags:\r\n        - Seasons\r\n      summary: Get Seasons\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: \"#/components/schemas/Season\"\r\n  /api/season-player-history:\r\n    get:\r\n      tags:\r\n        - Seasons\r\n      security:\r\n        - cookieAuth: []\r\n      summary: Get Season Player History\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n        - name: page\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: integer\r\n        - name: perPage\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: integer\r\n        - name: seasonId\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: string\r\n            default: Medallion Race Season\r\n        - name: realm\r\n          in: query\r\n          required: false\r\n          schema:\r\n            $ref: '#/components/schemas/Realms'\r\n        - name: id\r\n          description: accountName\r\n          in: query\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/AccountName'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json: {}\r\n  /api/leagues:\r\n    get:\r\n      tags:\r\n        - Leagues\r\n      summary: Get a list of current and past leagues.\r\n      description: |\r\n        * https://www.pathofexile.com/developer/docs/api-resource-leagues\r\n      parameters:\r\n        - name: type\r\n          in: query\r\n          description: >\r\n            Possible values:\r\n              * `main` - retrieves main leagues (ones from the character screen)\r\n              * `event` - retrieves event leagues\r\n              * `season` - retrieves leagues in a particular season\r\n          schema:\r\n            type: string\r\n            enum: [main, event, season]\r\n        - name: realm\r\n          in: query\r\n          description: |\r\n            The realm of the leagues\r\n          schema:\r\n            $ref: '#/components/schemas/Realms'\r\n        - name: season\r\n          in: query\r\n          description: |\r\n            A particular season id. Required when type=season.\r\n          schema:\r\n            type: string\r\n        - name: compat\r\n          in: query\r\n          description: |\r\n            Possible values:\r\n              * `0` - Displays the full info for leagues retrieved (will only retrieve a maximum of 50 leagues) (the default)\r\n              * `1` - Display compact info for leagues retrieved (will retrieve up to 230 leagues)\r\n          schema:\r\n            type: number\r\n            enum: [0, 1]\r\n        - name: limit\r\n          in: query\r\n          description: |\r\n            This specifies the number of league entries to include. By default this is the maximum, which depends on the setting above.\r\n          schema:\r\n            type: number\r\n        - name: offset\r\n          in: query\r\n          description: |\r\n            This specifies the offset to the first league entry to include.\r\n          schema:\r\n            type: number\r\n            default: 0\r\n        - name: callback\r\n          in: query\r\n          description: |\r\n            jsonp callback\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: \"#/components/schemas/League\"\r\n  /api/leagues/{id}:\r\n    get:\r\n      tags:\r\n        - Leagues\r\n      summary: Get a single league by id.\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: |\r\n            The id (name) of the league.\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/LeagueNames'\r\n        - name: realm\r\n          in: query\r\n          description: |\r\n            The realm of the leagues\r\n          schema:\r\n            $ref: '#/components/schemas/Realms'\r\n        - name: limit\r\n          in: query\r\n          description: |\r\n            When including the ladder with ladder=1, this specifies the number of ladder entries to include.\r\n          schema:\r\n            type: number\r\n            default: 20\r\n            maximum: 200\r\n        - name: offset\r\n          in: query\r\n          description: |\r\n            When including the ladder with ladder=1, this specifies the offset to the first ladder entry to include.\r\n          schema:\r\n            type: number\r\n            default: 0\r\n        - name: track\r\n          in: query\r\n          description: |\r\n            When including the ladder with ladder=1, this setting adds unique IDs for each character returned. These can be used when name conflicts occur.\r\n          schema:\r\n            type: number\r\n        - name: accountName\r\n          in: query\r\n          description: |\r\n            League only: Filters by account name within the first 15000 results.\r\n          schema:\r\n            $ref: '#/components/schemas/AccountName'\r\n        - name: difficulty\r\n          in: query\r\n          description: |\r\n            Labyrinth only: Standard (1), Cruel (2), or Merciless (3)\r\n          schema:\r\n            type: string\r\n            enum: [Standard, Cruel, Merciless]\r\n        - name: start\r\n          in: query\r\n          description: |\r\n            Labyrinth only: Timestamp of the ladder you want.\r\n          schema:\r\n            type: string\r\n        - name: sort\r\n          in: query\r\n          schema:\r\n            type: string\r\n            enum: [depth, depthsolo]\r\n        - name: callback\r\n          in: query\r\n          description: |\r\n            jsonp callback\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/League\"\r\n  /api/league-rules:\r\n    get:\r\n      tags:\r\n        - Leagues\r\n      summary: Get a list of all possible league rules.\r\n      description: |\r\n        https://www.pathofexile.com/developer/docs/api-resource-league-rules\r\n      parameters:\r\n        - name: callback\r\n          in: query\r\n          description: |\r\n            jsonp callback\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: \"#/components/schemas/LeagueRule\"\r\n  /api/league-rules/{id}:\r\n    get:\r\n      tags:\r\n        - Leagues\r\n      summary: Get a single league rule by id.\r\n      description: |\r\n        https://www.pathofexile.com/developer/docs/api-resource-league-rules\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: The rule id.\r\n          required: true\r\n          schema:\r\n            type: number\r\n        - name: callback\r\n          in: query\r\n          description: |\r\n            jsonp callback\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/LeagueRule\"\r\n  /api/private-league-member/{id}:\r\n    get:\r\n      tags:\r\n        - PrivateLeagues\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: private league without PL prefix\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json: {}\r\n  /api/ladders/{id}:\r\n    get:\r\n      tags:\r\n        - Ladder\r\n      summary: Get a ladder by league id. There is a restriction in place on the last ladder entry you are able to retrieve which is set to 15000.\r\n      description: >\r\n        * https://www.pathofexile.com/developer/docs/api-resource-ladders\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: |\r\n            The id (name) of the league for the ladder you want to retrieve.\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/LeagueNames'\r\n        - name: limit\r\n          in: query\r\n          description: |\r\n            Specifies the number of ladder entries to include.\r\n          schema:\r\n            type: number\r\n            default: 20\r\n            maximum: 200\r\n        - name: offset\r\n          in: query\r\n          description: |\r\n            Specifies the offset to the first ladder entry to include.\r\n          schema:\r\n            type: number\r\n            default: 0\r\n            maximum: 15000\r\n        - name: type\r\n          in: query\r\n          description: |\r\n            Specifies the type of ladder\r\n          schema:\r\n            type: string\r\n            default: league\r\n            enum: [league, pvp, labyrinth]\r\n        - name: track\r\n          in: query\r\n          description: |\r\n            Adds unique IDs for each character returned. These can be used when name conflicts occur. Default: true\r\n          schema:\r\n            type: string\r\n        - name: accountName\r\n          in: query\r\n          description: |\r\n            League only: Filters by account name within the first 15000 results.\r\n          schema:\r\n            $ref: '#/components/schemas/AccountName'\r\n        - name: difficulty\r\n          in: query\r\n          description: |\r\n            Labyrinth only: Standard (1), Cruel (2) or Merciless (3)\r\n          schema:\r\n            type: string\r\n            enum: [Normal]\r\n        - name: start\r\n          in: query\r\n          description: |\r\n            Labyrinth only: Timestamp of the ladder you want.\r\n          schema:\r\n            type: string\r\n        - name: callback\r\n          in: query\r\n          description: |\r\n            jsonp callback\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Ladders'\r\n  /api/pvp-matches:\r\n    get:\r\n      tags:\r\n        - PVP\r\n      summary: Get a list of PvP matches.\r\n      parameters:\r\n        - name: type\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: string\r\n            enum: [season]\r\n        - name: seasonId\r\n          in: query\r\n          description: |\r\n            Set this to get PvP matches for a particular season. Leave this unset to retrieve all upcoming PvP matches.\r\n          schema:\r\n            type: string\r\n        - name: realm\r\n          in: query\r\n          description: |\r\n            The realm to fetch PvP matches from\r\n          schema:\r\n            $ref: '#/components/schemas/Realms'\r\n        - name: callback\r\n          in: query\r\n          description: |\r\n            jsonp callback\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json: {}\r\n  /api/public-stash-tabs:\r\n    get:\r\n      tags:\r\n        - PublicStashTabs\r\n      summary: Retrieves a list of stashes, accounts, and items as described above in the Introduction section.\r\n      description: |\r\n        * https://www.pathofexile.com/developer/docs/api-resource-public-stash-tabs\r\n        * https://pathofexile.gamepedia.com/Public_stash_tab_API\r\n        * API doesn't contain any historical data and always returns the current state of stash tabs.\r\n      parameters:\r\n        - name: User-Agent\r\n          in: header\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/UserAgent'\r\n        - name: id\r\n          in: query\r\n          description: |\r\n            The next change ID you recieved from previously fetching changes.\r\n          schema:\r\n            type: string\r\n            default: 0\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/PublicStashTab'\r\n  /api/shop/microtransactions/specials:\r\n    get:\r\n      tags:\r\n        - MTX\r\n      summary: get today special deals\r\n      parameters:\r\n        - name: type\r\n          in: query\r\n          schema:\r\n            type: string\r\n            enum: [active]\r\n        - name: limit\r\n          in: query\r\n          schema:\r\n            type: number\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Specials'\r\n  /api/streams:\r\n    get:\r\n      tags:\r\n        - Streams\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  streams:\r\n                    type: array\r\n                    items:\r\n                      $ref: '#/components/schemas/Stream'\r\n  /api/trade/data/leagues:\r\n    get:\r\n      tags:\r\n        - Trade\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TradeDataLeagues'\r\n  /api/trade/data/items:\r\n    get:\r\n      tags:\r\n        - Trade\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TradeDataItems'\r\n  /api/trade/data/stats:\r\n    get:\r\n      tags:\r\n        - Trade\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TradeDataStats'\r\n  /api/trade/data/static:\r\n    get:\r\n      tags:\r\n        - Trade\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TradeDataStatic'\r\n  /api/trade/data/change-ids:\r\n    get:\r\n      tags:\r\n        - Trade\r\n      summary: trade last change ids\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/TradeChangeIDS'\r\n  /api/trade/search/{league}:\r\n    post:\r\n      tags:\r\n        - Trade\r\n      summary: trade search function\r\n      parameters:\r\n        - name: league\r\n          in: path\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/LeagueNames'\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/SearchSource'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/SearchResult'\r\n  /api/trade/fetch/{items}:\r\n    get:\r\n      tags:\r\n        - Trade\r\n      summary: fetch items using search result\r\n      parameters:\r\n        - name: items\r\n          in: path\r\n          required: true\r\n          description: Search Results in ,\r\n          schema:\r\n            type: string\r\n          example: c593ccc98580e892eb0745048a8378927b452070e91da03139a00d450eca7477,e1105792ac87113b20487d7cb2d5b9fd43f40b3bdd8a55780acbaaad513c9b65\r\n        - name: query\r\n          in: query\r\n          description: Search id\r\n          schema:\r\n            type: string\r\n          example: Wqn2LKFm\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  result:\r\n                    $ref: '#/components/schemas/Items'\r\n  /api/trade/ignore:\r\n    get:\r\n      tags:\r\n        - Trade\r\n      summary: List ignored trade accounts\r\n      security:\r\n        - cookieAuth: []\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  result:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        name:\r\n                          type: string\r\n                  pagination:\r\n                    type: object\r\n                    properties:\r\n                      page:\r\n                        type: integer\r\n                        default: 1\r\n                        minimum: 1\r\n                      per_page:\r\n                        type: integer\r\n                        default: 50\r\n                      total:\r\n                        type: integer\r\n  /api/trade/ignore/{account}:\r\n    put:\r\n      tags:\r\n        - Trade\r\n      summary: Ignore a trade account\r\n      security:\r\n        - cookieAuth: []\r\n      parameters:\r\n        - name: account\r\n          in: path\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n    delete:\r\n      tags:\r\n        - Trade\r\n      summary: Unignore a trade account\r\n      security:\r\n        - cookieAuth: []\r\n      parameters:\r\n        - name: account\r\n          in: path\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json: {}\r\n  /ladder/export-csv/league/{league}:\r\n    get:\r\n      description: 2000 per page\r\n      tags:\r\n        - Ladder\r\n      parameters:\r\n        - name: league\r\n          in: path\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/LeagueNames'\r\n        - name: realm\r\n          in: query\r\n          required: true\r\n          description: |\r\n            The realm to fetch PvP matches from\r\n          schema:\r\n            $ref: '#/components/schemas/Realms'\r\n        - name: index\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            minimum: 1\r\n            maximum: 8\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            text/csv: {}\r\n  /api/league:\r\n    get:\r\n      tags:\r\n        - Leagues\r\n      summary: OAuth 2.0 API\r\n      responses:\r\n        '200':\r\n          description: OK\r\n  /api/league/{id}:\r\n    get:\r\n      tags:\r\n        - Leagues\r\n      summary: OAuth 2.0 API\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: The league id.\r\n          required: true\r\n          schema:\r\n            type: number\r\n      responses:\r\n        '200':\r\n          description: OK\r\n  /api/league/{id}/ladder:\r\n    get:\r\n      tags:\r\n        - Ladder\r\n      summary: OAuth 2.0 API\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: The league id.\r\n          required: true\r\n          schema:\r\n            type: number\r\n      responses:\r\n        '200':\r\n          description: OK\r\n  /api/pvp-match:\r\n    get:\r\n      tags:\r\n        - PVP\r\n      summary: OAuth 2.0 API\r\n      responses:\r\n        '200':\r\n          description: OK\r\n  /api/pvp-match/{match}:\r\n    get:\r\n      tags:\r\n        - PVP\r\n      summary: OAuth 2.0 API\r\n      parameters:\r\n        - name: match\r\n          in: path\r\n          description: The league id.\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n  /api/character:\r\n    get:\r\n      tags:\r\n        - Account\r\n      summary: OAuth 2.0 API\r\n      responses:\r\n        '200':\r\n          description: OK\r\n  /api/character/{name}:\r\n    get:\r\n      tags:\r\n        - Account\r\n      summary: OAuth 2.0 API\r\n      parameters:\r\n        - name: name\r\n          in: path\r\n          description: name of one of the account's characters\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n  /api/stash/{league}:\r\n    get:\r\n      tags:\r\n        - Account\r\n      summary: OAuth 2.0 API\r\n      parameters:\r\n        - name: league\r\n          in: path\r\n          description: name of a Path of Exile league\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n  /api/stash/{league}/{stash_id}:\r\n    get:\r\n      tags:\r\n        - Account\r\n      summary: OAuth 2.0 API\r\n      parameters:\r\n        - name: league\r\n          in: path\r\n          description: name of a Path of Exile league\r\n          required: true\r\n          schema:\r\n            type: string\r\n        - name: stash_id\r\n          in: path\r\n          description: public identifier of a stash tab\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: OK\r\n  /api/item-filter:\r\n    get:\r\n      tags:\r\n        - ItemFilter\r\n      summary: OAuth 2.0 API\r\n      responses:\r\n        '200':\r\n          description: OK\r\n    post:\r\n      tags:\r\n        - ItemFilter\r\n      summary: OAuth 2.0 API\r\n      responses:\r\n        '200':\r\n          description: OK\r\n  /api/item-filter/{id}:\r\n    get:\r\n      tags:\r\n        - ItemFilter\r\n      summary: OAuth 2.0 API\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: The league id.\r\n          required: true\r\n          schema:\r\n            type: number\r\n      responses:\r\n        '200':\r\n          description: OK",
      "url": "http://redocly.github.io/redoc/openapi.yaml",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": "BaseServiceClient",
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": true,
      "clientBaseInterface": "IServiceClient",
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "ApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "{controller}PathOfExileApiServiceClient",
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "ChaosRecipeEnhancer.UI.ServiceClients",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "SystemTextJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": null,
      "newLineBehavior": "Auto"
    }
  }
}