<UserControl x:Class="ChaosRecipeEnhancer.UI.UserControls.SettingsForms.GeneralForms.StashForm"
             x:ClassModifier="public"
             xmlns:generalForms="clr-namespace:ChaosRecipeEnhancer.UI.UserControls.SettingsForms.GeneralForms"
             xmlns:creConfig="clr-namespace:ChaosRecipeEnhancer.UI.Models.Config"
             xmlns:creEnums="clr-namespace:ChaosRecipeEnhancer.UI.Models.Enums"
             xmlns:creConverters="clr-namespace:ChaosRecipeEnhancer.UI.Converters"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             Background="#202020"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=generalForms:StashFormViewModel}">

    <UserControl.Resources>
        <creConverters:InvertBoolConverter x:Key="InvertBoolConverter" />
        <creConverters:BoolVisibilityConverter x:Key="BoolVisibilityConverter" CollapseWhenNotVisible="True" />
        <creConverters:BoolVisibilityConverter x:Key="InvertedBoolVisibilityConverter" CollapseWhenNotVisible="True" Invert="True" />
        <creConverters:EqualityToVisibilityConverter x:Key="VisibleIfEqual" ComparisonType="{x:Type system:Int32}" />
        <creConverters:FetchButtonEnabledConverter x:Key="FetchButtonEnabledConverter"/>
    </UserControl.Resources>

    <Grid Margin="10">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock
            Grid.Column="0"
            Grid.Row="0"
            Grid.ColumnSpan="2"
            Margin="0 0 0 10"
            VerticalAlignment="Center"
            Text="Stash"
            FontSize="24" />

        <!-- League Selection Dropdown Start -->
        <TextBlock
            Grid.Column="0"
            Grid.Row="1"
            Margin="0 0 0 10"
            VerticalAlignment="Center"
            Text="Select League:" />

        <Grid
            Grid.Column="1"
            Grid.Row="1"
            Margin="0 0 0 10">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ComboBox
                x:Name="LeagueComboBox"
                Grid.Column="0"
                Grid.Row="0"
                Grid.ColumnSpan="3"
                Margin="10 0 5 0"
                Width="170"
                VerticalContentAlignment="Center"
                ItemsSource="{Binding LeagueList, Mode=OneWay}"
                SelectedValue="{Binding LeagueName}"
                SelectionChanged="LeagueComboBox_SelectionChanged"
                IsEnabled="{Binding LeagueDropDownEnabled, Mode=OneWay}"
                Visibility="{Binding LeagueDropDownEnabled, Converter={StaticResource BoolVisibilityConverter}}"
                ToolTip="You must first refresh leagues to enable the dropdown."
                ToolTipService.ShowOnDisabled="True"
                ToolTipService.InitialShowDelay="50"
                ToolTipService.IsEnabled="{Binding LeagueDropDownEnabled, Mode=OneWay, Converter={StaticResource InvertBoolConverter}}" />

            <TextBox
                Grid.Column="0"
                Grid.Row="0"
                Grid.ColumnSpan="3"
                Margin="10 0 5 0"
                Width="170"
                VerticalContentAlignment="Center"
                Text="{Binding LeagueName, Mode=OneWay}"
                IsEnabled="False"
                Visibility="{Binding LeagueDropDownEnabled, Converter={StaticResource InvertedBoolVisibilityConverter}}" />

            <Button
                x:Name="RefreshLeaguesButton"
                Grid.Column="3"
                Grid.Row="0"
                Width="60"
                Margin="5 0 0 0"
                HorizontalContentAlignment="Center"
                Content="Refresh"
                Visibility="{Binding LeagueDropDownEnabled, Converter={StaticResource BoolVisibilityConverter}}"
                IsEnabled="{Binding LeagueButtonEnabled}"
                Command="{Binding LeagueButtonCommand}" />

            <Button
                x:Name="ChangeLeaguesButton"
                Grid.Column="3"
                Grid.Row="0"
                Width="60"
                Margin="5 0 0 0"
                HorizontalContentAlignment="Center"
                Content="Change"
                Visibility="{Binding LeagueDropDownEnabled, Converter={StaticResource InvertedBoolVisibilityConverter}}"
                IsEnabled="{Binding LeagueButtonEnabled}"
                Command="{Binding LeagueButtonCommand}" />

        </Grid>
        <!-- League Selection Dropdown End -->

        <!--Private League Start-->
        <TextBlock
            Grid.Column="0"
            Grid.Row="2"
            Margin="0 0 0 10"
            VerticalAlignment="Center"
            Text="Private League:" />

        <CheckBox
            Grid.Column="1"
            Grid.Row="2"
            Margin="10 0 0 10"
            HorizontalAlignment="Left"
            IsEnabled="{Binding PrivateLeagueCheckboxEnabled, Mode=OneWay}"
            IsChecked="{Binding CustomLeagueEnabled, Mode=TwoWay}" />
        <!--Private League End-->

        <!-- Guild Stash Mode Checkbox Start -->
        <TextBlock
            Grid.Column="0"
            Grid.Row="3"
            Margin="0 0 0 10"
            VerticalAlignment="Center"
            Text="Guild Stash Mode:"
            ToolTip="Pick items from your shared guild stash." />

        <CheckBox
            Grid.Column="1"
            Grid.Row="3"
            Margin="10 0 0 10"
            HorizontalAlignment="Left"
            IsChecked="{Binding GuildStashMode, Mode=TwoWay}" />
        <!-- Guild Stash Mode Checkbox End -->

        <!-- Tab Query Mode Selector Start -->
        <TextBlock
            Grid.Column="0"
            Grid.Row="4"
            Margin="0 0 0 10"
            VerticalAlignment="Center"
            Text="Tab Query Mode:" />

        <ComboBox
            Grid.Column="1"
            Grid.Row="4"
            Margin="10 0 0 10"
            MinWidth="200"
            VerticalContentAlignment="Center"
            SelectedIndex="{Binding StashTabQueryMode, Mode=TwoWay}">

            <ComboBoxItem Content="Select Tabs From List" />
            <ComboBoxItem Content="Tab Name Prefix" />

        </ComboBox>
        <!-- Stash Tab Query Mode Selector Start -->

        <!-- Tab From List Start -->
        <TextBlock
            Grid.Column="0"
            Grid.Row="5"
            Margin="0 0 0 10"
            VerticalAlignment="Center"
            Text="Select Tabs:"
            Visibility="{Binding StashTabQueryMode, Converter={StaticResource VisibleIfEqual}, ConverterParameter=0}"/>

        <Grid
            Grid.Column="1"
            Grid.Row="5"
            Margin="10 0 0 10"
            Visibility="{Binding StashTabQueryMode, Converter={StaticResource VisibleIfEqual}, ConverterParameter=0}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <xctk:CheckComboBox
                Grid.Column="0"
                Grid.Row="0"
                Grid.ColumnSpan="3"
                Margin="0 0 5 0"
                Width="170"
                IsSelectAllActive="True"
                SelectAllContent="Select All / Clear All"
                MaxDropDownHeight="300"
                ItemSelectionChanged="TabsCheckComboBox_SelectionChanged"
                SelectedItemsOverride="{Binding Path=SelectedStashTabsById, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                ItemsSource="{Binding StashTabFullListForSelectionById}"
                IsEnabled="{Binding StashTabDropDownEnabled, Mode=OneWay}"
                Visibility="{Binding StashTabDropDownEnabled, Converter={StaticResource BoolVisibilityConverter}}"
                ValueMemberPath="Id"
                VerticalContentAlignment="Center"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                ToolTip="{Binding StashTabIdsToString, Mode=OneWay}"
                ToolTipService.InitialShowDelay="50">

                <xctk:CheckComboBox.Resources>
                    <Style TargetType="{x:Type CheckBox}">
                        <Setter Property="Background" Value="White" />
                    </Style>
                    <Style TargetType="{x:Type xctk:SelectAllSelectorItem}">
                        <Setter Property="Background" Value="#202020" />
                    </Style>
                </xctk:CheckComboBox.Resources>

                <xctk:CheckComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Foreground="#202020">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="[ID {0}] {1}">
                                    <Binding Path="Id"/>
                                    <Binding Path="Name"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </DataTemplate>
                </xctk:CheckComboBox.ItemTemplate>

            </xctk:CheckComboBox>

            <TextBox
                Grid.Column="0"
                Grid.Row="0"
                Grid.ColumnSpan="3"
                Margin="0 0 5 0"
                Width="170"
                Text="{Binding StashTabIdsToString, Mode=OneWay}"
                Visibility="{Binding StashTabDropDownEnabled, Converter={StaticResource InvertedBoolVisibilityConverter}}"
                VerticalContentAlignment="Center"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                IsEnabled="False"
                ToolTipService.ShowOnDisabled="True"
                ToolTipService.InitialShowDelay="50"
                ToolTipService.IsEnabled="{Binding StashTabDropDownEnabled, Mode=OneWay, Converter={StaticResource InvertBoolConverter}}" />

            <Button
                x:Name="SelectTabById_FetchStashTabsButton"
                Grid.Column="3"
                Grid.Row="0"
                Width="60"
                Margin="5 0 0 0"
                Content="Fetch"
                Visibility="{Binding StashTabDropDownEnabled, Converter={StaticResource BoolVisibilityConverter}}"
                Command="{Binding StashTabButtonCommand}">

                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource FetchButtonEnabledConverter}">
                        <Binding Path="StashTabButtonEnabled"/>
                        <Binding Path="LeagueName"/>
                    </MultiBinding>
                </Button.IsEnabled>

            </Button>

            <Button
                x:Name="SelectTabById_ChangeStashTabsButton"
                Grid.Column="3"
                Grid.Row="0"
                Width="60"
                Margin="5 0 0 0"
                Content="Change"
                Visibility="{Binding StashTabDropDownEnabled, Converter={StaticResource InvertedBoolVisibilityConverter}}"
                IsEnabled="{Binding StashTabButtonEnabled}"
                Command="{Binding StashTabButtonCommand}" />

        </Grid>
        <!-- Tab From List End -->

        <!-- Individual Tab Name Prefix Start -->
        <TextBlock
            Grid.Column="0"
            Grid.Row="6"
            Margin="0 0 0 10"
            VerticalAlignment="Center"
            Text="Tab Name Prefix:"
            ToolTip="Every stash tab which name starts with this prefix will be added."
            Visibility="{Binding StashTabQueryMode, Converter={StaticResource VisibleIfEqual}, ConverterParameter=1}" />

        <TextBox
            Grid.Column="1"
            Grid.Row="6"
            Margin="10 0 0 10"
            Visibility="{Binding StashTabQueryMode, Converter={StaticResource VisibleIfEqual}, ConverterParameter=1}"
            Text="{Binding StashTabPrefix, Mode=TwoWay}" />
        <!-- Individual Tab Name Prefix End -->

        <!-- Hide Remove Only Tabs Checkbox Start -->
        <TextBlock
            Grid.Column="0"
            Grid.Row="7"
            VerticalAlignment="Center"
            Text="Hide Remove-Only Tabs:"
            ToolTip="Hide the (potentially overwhelming) amount of Remove-Only tabs from the 'Select Tabs' list." />

        <CheckBox
            Grid.Column="1"
            Grid.Row="7"
            Margin="10 0 0 0"
            HorizontalAlignment="Left"
            IsChecked="{Binding HideRemoveOnlyTabs, Mode=TwoWay}" />
        <!-- Hide Remove Only Tabs Checkbox End -->

    </Grid>
</UserControl>