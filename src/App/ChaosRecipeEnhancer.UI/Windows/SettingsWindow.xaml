<Window x:Class="ChaosRecipeEnhancer.UI.Windows.SettingsWindow"
        Style="{StaticResource CustomWindowStyle}"
        xmlns:overlayForms="clr-namespace:ChaosRecipeEnhancer.UI.UserControls.SettingsForms.OverlayForms"
        xmlns:generalForms="clr-namespace:ChaosRecipeEnhancer.UI.UserControls.SettingsForms.GeneralForms"
        xmlns:accountForms="clr-namespace:ChaosRecipeEnhancer.UI.UserControls.SettingsForms.AccountForms"
        xmlns:lootFilterForms="clr-namespace:ChaosRecipeEnhancer.UI.UserControls.SettingsForms.LootFilterForms"
        xmlns:otherForms="clr-namespace:ChaosRecipeEnhancer.UI.UserControls.SettingsForms.OtherForms"
        xmlns:view="clr-namespace:ChaosRecipeEnhancer.UI.Windows"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:properties="clr-namespace:ChaosRecipeEnhancer.UI.Properties"
        xmlns:creConverters="clr-namespace:ChaosRecipeEnhancer.UI.Converters"
        FontSize="14"
        Title="Chaos Recipe Enhancer Settings"
        Icon="/Assets/Icons/CREIcon.ico"
        FontFamily="Segoe UI Light"
        ResizeMode="CanMinimize"
        ShowActivated="True"
        WindowStartupLocation="CenterScreen"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type={x:Type view:SettingsViewModel}}">

    <Window.Resources>
        <creConverters:EqualityConverter x:Key="ValidateConnectionConverter" ComparisonType="{x:Type system:Int32}" />
        <creConverters:InvertBoolConverter x:Key="InvertedBoolConverter" />
        <creConverters:BoolVisibilityConverter x:Key="BooleanToVisibilityConverter" CollapseWhenNotVisible="True" />
        <creConverters:BoolVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" CollapseWhenNotVisible="True" Invert="True"/>
    </Window.Resources>

    <Border
        BorderBrush="DarkGray"
        BorderThickness="1">
        <Grid
            Margin="5"
            Focusable="True">
            <!-- 'Main' App Grid Definitions -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- App Header Start -->
            <UniformGrid
                Grid.Column="0"
                Grid.Row="0"
                Columns="2"
                Rows="1"
                Margin="0 0 0 5">

                <!-- Save Settings Button -->
                <Button
                    Margin="0 0 2.5 0"
                    Content="Save Settings"
                    Click="OnSaveButtonClicked" />

                <!-- Run Overlay Button -->
                <Button
                    x:Name="RunOverlayButton"
                    Margin="2.5 0 0 0"
                    Content="Run Overlay"
                    Click="OnRunOverlayButtonClicked"
                    IsEnabled="{Binding GlobalUserSettings.PoEAccountConnectionStatus, Converter={StaticResource ValidateConnectionConverter}, ConverterParameter=1}"/>

            </UniformGrid>
            <!-- App Header End -->

            <!-- Tab Container Start -->
            <TabControl
                Grid.Column="0"
                Grid.Row="1"
                SelectedIndex="{Binding GlobalUserSettings.SettingsWindowNavIndex}">

                <!-- Account Settings Tab Start -->
                <TabItem Header="Account">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!-- Path of Exile Account (New - OAuth) -->
                        <accountForms:OAuthForm
                            Grid.Column="0"
                            Grid.Row="0"
                            Visibility="{Binding GlobalUserSettings.LegacyAuthMode, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />

                        <!-- Path of Exile Account (Legacy - Session ID) -->
                        <accountForms:LegacyAuthForm
                            Grid.Column="1"
                            Grid.Row="0"
                            Visibility="{Binding GlobalUserSettings.LegacyAuthMode, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    </Grid>
                </TabItem>
                <!-- Account Settings Tab End -->

                <!-- General Settings Tab Start -->
                <TabItem
                    Header="General"
                    IsEnabled="{Binding GlobalUserSettings.PoEAccountConnectionStatus, Converter={StaticResource ValidateConnectionConverter}, ConverterParameter=1}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!-- Recipes -->
                        <generalForms:RecipesForm
                            Grid.Column="0"
                            Grid.Row="0"
                            d:DataContext="{Binding }"/>

                        <!-- General -->
                        <generalForms:StashForm
                            Grid.Column="1"
                            Grid.Row="0"
                            Visibility="{Binding GlobalUserSettings.LegacyAuthMode, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />

                        <generalForms:LegacyStashForm
                            Grid.Column="2"
                            Grid.Row="0"
                            Visibility="{Binding GlobalUserSettings.LegacyAuthMode, Converter={StaticResource BooleanToVisibilityConverter}}" />

                        <generalForms:FetchOnRezoneForm
                            Grid.Column="0"
                            Grid.Row="1"
                            Grid.ColumnSpan="3" />

                    </Grid>
                </TabItem>
                <!-- General Settings Tab End -->

                <!-- Overlay Settings Tab Start -->
                <TabItem
                    Header="Overlays"
                    IsEnabled="{Binding GlobalUserSettings.PoEAccountConnectionStatus, Converter={StaticResource ValidateConnectionConverter}, ConverterParameter=1}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!-- Set Tracker Overlay -->
                        <overlayForms:SetTrackerOverlayForm
                            Grid.Column="0"
                            Grid.Row="0" />

                        <!-- Stash Tab Overlay -->
                        <overlayForms:StashTabOverlayForm
                            Grid.Column="1"
                            Grid.Row="0" />

                    </Grid>
                </TabItem>
                <!-- Overlay Settings Tab End -->

                <!-- Loot Filter Settings Tab Start -->
                <TabItem
                    Header="Loot Filter"
                    IsEnabled="{Binding GlobalUserSettings.PoEAccountConnectionStatus, Converter={StaticResource ValidateConnectionConverter}, ConverterParameter=1}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <lootFilterForms:FilterStylesForm
                            Grid.Column="0"
                            Grid.Row="0"
                            Grid.ColumnSpan="2"
                            Margin="0,25,0,25"
                            HorizontalAlignment="Center" />

                        <!-- Filter Manipulation -->
                        <lootFilterForms:LootFilterManipulationForm
                            Grid.Column="0"
                            Grid.Row="1" />
                        <!-- Colors -->

                        <lootFilterForms:ColorsForm
                            Grid.Column="1"
                            Grid.Row="1" />



                    </Grid>
                </TabItem>
                <!-- Loot Filter Settings Tab End -->

                <!-- We need to embed the Hotkey stuff directly into the main SettingsWindow
                since we want to have access to the SetTracker and its various Run* methods-->

                <!-- Hotkey Settings Tab Start -->
                <TabItem
                    Header="Hotkeys"
                    IsEnabled="{Binding GlobalUserSettings.PoEAccountConnectionStatus, Converter={StaticResource ValidateConnectionConverter}, ConverterParameter=1}">

                    <!-- Hotkeys -->
                    <Grid Margin="10" ShowGridLines="False">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBlock
                            Grid.Column="0"
                            Grid.Row="0"
                            Grid.ColumnSpan="2"
                            Margin="0 0 0 10"
                            VerticalAlignment="Center"
                            Text="Hotkeys"
                            FontSize="24"
                            FontWeight="Bold" />

                        <TextBlock
                            Grid.Column="0"
                            Grid.Row="1"
                            Margin="0 0 0 10"
                            VerticalAlignment="Center"
                            Text="Fetch Stash Contents:"
                            ToolTipService.InitialShowDelay="50"
                            ToolTip="Cooldown Period: 10 seconds&#x0a;&#x0a;Hotkey for fetching the most up-to-date stash contents.&#x0a;Remember that you must re-zone to force your stash&#x0a;contents to update on GGG's servers." />

                        <Button
                            Width="200"
                            Grid.Column="1"
                            Grid.Row="1"
                            Margin="10 0 0 10"
                            IsManipulationEnabled="False"
                            Focusable="False"
                            Content="{Binding Source={x:Static properties:Settings.Default}, Path=FetchStashHotkey, Mode=TwoWay, TargetNullValue=&lt; not set &gt;}"
                            Click="SetHotkeyForFetchStashData_Click" />

                        <TextBlock
                            Grid.Column="0"
                            Grid.Row="2"
                            Margin="0 0 0 10"
                            VerticalAlignment="Center"
                            Text="Reload Item Filter:"
                            ToolTipService.InitialShowDelay="50"
                            ToolTip="Cooldown: 10 seconds&#x0a;&#x0a;Hotkey for reloading your item filter." />

                        <Button
                            Width="200"
                            Grid.Column="1"
                            Grid.Row="2"
                            Margin="10 0 0 10"
                            IsManipulationEnabled="False"
                            Focusable="False"
                            ToolTip="Disabled as Loot Filter Manipulation is not enabled."
                            ToolTipService.InitialShowDelay="50"
                            ToolTipService.ShowOnDisabled="True"
                            ToolTipService.IsEnabled="{Binding GlobalUserSettings.LootFilterManipulationEnabled, Converter={StaticResource InvertedBoolConverter}}"
                            Content="{Binding Source={x:Static properties:Settings.Default}, Path=ReloadFilterHotkey, Mode=TwoWay, TargetNullValue=&lt; not set &gt;}"
                            Click="SetHotkeyForReloadItemFilter_Click"
                            IsEnabled="{Binding GlobalUserSettings.LootFilterManipulationEnabled}" />

                        <TextBlock
                            Grid.Column="0"
                            Grid.Row="3"
                            Margin="0 0 0 10"
                            VerticalAlignment="Center"
                            Text="Toggle Set Tracker Overlay:"
                            ToolTipService.InitialShowDelay="50"
                            ToolTip="Cooldown: 250 milliseconds&#x0a;&#x0a;Hotkey for showing/hiding the Set Tracker Overlay.&#x0a;While hidden, there will be no requests to the server." />

                        <Button
                            Width="200"
                            Grid.Column="1"
                            Grid.Row="3"
                            Margin="10 0 0 10"
                            IsManipulationEnabled="False"
                            Focusable="False"
                            Content="{Binding Source={x:Static properties:Settings.Default}, Path=ToggleSetTrackerOverlayHotkey, Mode=TwoWay, TargetNullValue=&lt; not set &gt;}"
                            Click="SetHotkeyForToggleSetTrackerOverlay_Click" />

                        <TextBlock
                            Grid.Column="0"
                            Grid.Row="4"
                            Margin="0 0 0 10"
                            VerticalAlignment="Center"
                            Text="Toggle Stash Tab Overlay:"
                            ToolTipService.InitialShowDelay="50"
                            ToolTip="Cooldown: 250 milliseconds&#x0a;&#x0a;Hotkey for showing/hiding the Stash Tab Overlay." />

                        <Button
                            Width="200"
                            Grid.Column="1"
                            Grid.Row="4"
                            Margin="10 0 0 10"
                            IsManipulationEnabled="False"
                            Focusable="False"
                            Content="{Binding Source={x:Static properties:Settings.Default}, Path=ToggleStashTabOverlayHotkey, Mode=TwoWay, TargetNullValue=&lt; not set &gt;}"
                            Click="SetHotkeyForToggleStashTabOverlay_Click" />

                    </Grid>

                </TabItem>
                <!-- Hotkey Settings Tab End -->

                <!-- Advanced Settings Tab Start -->
                <TabItem Header="Advanced">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!-- Advance Form -->
                        <otherForms:AdvancedForm
                            Grid.Column="0"
                            Grid.Row="0" />

                        <!-- System Form -->
                        <otherForms:SystemForm
                            Grid.Column="1"
                            Grid.Row="0" />

                    </Grid>
                </TabItem>
                <!-- Advanced Settings Tab End -->
            </TabControl>
            <!-- Tab Container End -->

            <!-- App Footer Start -->
            <Grid
                Grid.Column="0"
                Grid.Row="2"
                Margin="0 5 0 0">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <!-- Takes up the remaining space for the disclaimer -->
                    <ColumnDefinition Width="Auto"/>
                    <!-- Width only as wide as the icon and version text -->
                </Grid.ColumnDefinitions>

                <!-- Disclaimer Text -->
                <TextBlock
                    Grid.Column="0"
                    FontSize="10"
                    Margin="0 0 25 0"
                    VerticalAlignment="Center"
                    TextAlignment="Center"
                    Text="This product isn't affiliated with or endorsed by Grinding Gear Games in any way." />

                <!-- Update Available Icon and App Version Text -->
                <StackPanel
                    Grid.Column="1"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center">

                    <!-- Update Available Icon -->
                    <!-- Update Available Icon -->
                    <Image
                        Width="16"
                        Height="16"
                        Source="../Assets/Images/UpgradeArrow.png"
                        Visibility="{Binding UpdateAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Margin="0,0,5,0"
                        ToolTipService.InitialShowDelay="50"
                        ToolTip="Update available! Click to see our latest release.">

                        <Image.InputBindings>
                            <MouseBinding
                                MouseAction="LeftClick"
                                Command="{Binding OpenLatestReleasePageCommand}" />
                        </Image.InputBindings>
                    </Image>

                    <!-- App Version Text -->
                    <TextBlock
                        FontSize="12"
                        TextAlignment="Right"
                        Text="{Binding Version, StringFormat='CRE {0} by Mario, Tropical, Zemoto, &amp; kosace'}" />
                </StackPanel>
            </Grid>
            <!-- App Footer End -->

        </Grid>

    </Border>

</Window>