<UserControl x:Class="ChaosRecipeEnhancer.UI.UserControls.SettingsForms.GeneralForms.GeneralForm"
             x:ClassModifier="internal"
             xmlns:properties="clr-namespace:ChaosRecipeEnhancer.UI.Properties"
             xmlns:generalForms="clr-namespace:ChaosRecipeEnhancer.UI.UserControls.SettingsForms.GeneralForms"
             xmlns:utilities="clr-namespace:ChaosRecipeEnhancer.UI.Utilities"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d"
             Loaded="OnFormLoaded"
             d:DataContext="{d:DesignInstance Type=generalForms:GeneralFormViewModel}">

    <UserControl.Resources>
        <utilities:BoolVisibilityConverter x:Key="CustomLeagueVisibilityBoolConverter"
                                           CollapseWhenNotVisible="True" />
        <utilities:BoolVisibilityConverter x:Key="MainLeagueVisibilityInvertedBoolConverter"
                                           CollapseWhenNotVisible="True"
                                           Invert="True" />
        <xctk:InverseBoolConverter x:Key="InvertBoolConverter" />
    </UserControl.Resources>

    <Grid
        Margin="10 0 10 10"
        ShowGridLines="False">

        <Grid.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Margin" Value="0 10 10 0" />
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="Margin" Value="0 5 0 0" />
            </Style>
            <Style TargetType="CheckBox">
                <Setter Property="Margin" Value="0 5 0 0" />
            </Style>
            <Style TargetType="ComboBox">
                <Setter Property="Margin" Value="0 10 0 0" />
            </Style>
            <Style TargetType="Button">
                <Setter Property="Margin" Value="5 10 0 0" />
            </Style>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock
            Grid.Column="0"
            Grid.Row="0"
            VerticalAlignment="Center"
            Text="General"
            FontSize="24"
            FontWeight="Bold" />

        <!-- League Selection Start -->
        <TextBlock
            Grid.Column="0"
            Grid.Row="1"
            VerticalAlignment="Center"
            Text="League:"
            ToolTipService.InitialShowDelay="50"
            ToolTip="The league you are playing in." />

        <Grid
            Grid.Column="1"
            Grid.Row="1">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBox
                Grid.Column="0"
                Grid.Row="0"
                Grid.ColumnSpan="3"
                Text="{Binding Settings.LeagueName, Mode=TwoWay}"
                Visibility="{Binding Settings.CustomLeagueEnabled, Converter={StaticResource CustomLeagueVisibilityBoolConverter}}" />

            <ComboBox
                Grid.Column="0"
                Grid.Row="0"
                Grid.ColumnSpan="2"
                VerticalContentAlignment="Center"
                HorizontalContentAlignment="Stretch"
                IsSynchronizedWithCurrentItem="True"
                ItemsSource="{Binding LeagueList, Mode=OneWay}"
                SelectedItem="{Binding Settings.LeagueName, Mode=TwoWay}"
                Visibility="{Binding Settings.CustomLeagueEnabled, Converter={StaticResource MainLeagueVisibilityInvertedBoolConverter}}" />

            <Button
                Grid.Column="2"
                Grid.Row="0"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Content="Refresh"
                Click="OnRefreshLeaguesButtonClicked"
                Visibility="{Binding Settings.CustomLeagueEnabled, Converter={StaticResource MainLeagueVisibilityInvertedBoolConverter}}" />

        </Grid>
        <!-- League Selection End -->

        <!-- Custom League Checkbox Start -->
        <TextBlock
            Grid.Column="0"
            Grid.Row="2"
            VerticalAlignment="Center"
            Text="Custom League:"
            ToolTipService.InitialShowDelay="50"
            ToolTip="If you are playing in a custom league, check this box to input the league name manually." />

        <CheckBox
            Grid.Column="1"
            Grid.Row="2"
            VerticalAlignment="Center"
            IsChecked="{Binding Settings.CustomLeagueEnabled, Mode=TwoWay}" />
        <!-- Custom League Checkbox Start -->

        <!-- Target Stash Selection Start -->
        <TextBlock
            Grid.Column="0"
            Grid.Row="3"
            VerticalAlignment="Center"
            Text="Target Stash:"
            ToolTip="The stash tab you want to use, your individual stash tab or your guild stash." />

        <ComboBox
            Grid.Column="1"
            Grid.Row="3"
            VerticalContentAlignment="Center"
            SelectedIndex="{Binding Settings.TargetStash, Mode=TwoWay}">

            <ComboBoxItem Content="My Stash" />
            <ComboBoxItem Content="Guild Stash" />

        </ComboBox>
        <!-- Target Stash Selection Start -->

        <!-- Stash Tab Query Mode Selector Start -->
        <TextBlock
            Grid.Column="0"
            Grid.Row="4"
            VerticalAlignment="Center"
            Text="Stash Tab Query Mode:"
            ToolTip="The stash tab fetching mode. Stash tabs will automatically be added." />

        <ComboBox
            Grid.Column="1"
            Grid.Row="4"
            VerticalContentAlignment="Center"
            SelectionChanged="ComboBox_SelectionChanged"
            SelectedIndex="{Binding Settings.StashTabQueryMode, Mode=TwoWay}">

            <ComboBoxItem Content="Select Tabs From List" />
            <ComboBoxItem Content="Tab Name Prefix" />
            <ComboBoxItem Content="Tab Name Suffix" />
            <ComboBoxItem Content="ID" />

        </ComboBox>
        <!-- Stash Tab Query Mode Selector Start -->

        <!-- Select Tab From List Start -->
        <TextBlock Grid.Column="0"
                   Grid.Row="5"
                   VerticalAlignment="Center"
                   Text="Stash Tabs:" />

        <Grid Grid.Column="1"
              Grid.Row="5"
              Width="200">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="4" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ComboBox Grid.Column="0"
                      Width="140"
                      IsEnabled="{Binding FetchingStashTabs, Converter={StaticResource InvertBoolConverter}}"
                      ItemsSource="{Binding StashTabList}"
                      SelectedItem="{Binding SelectedStashTabHandler.SelectedStashTab, Mode=TwoWay}"
                      DisplayMemberPath="TabName"
                      VerticalContentAlignment="Center" />

            <Button Content="Fetch"
                    Grid.Column="2"
                    IsEnabled="{Binding FetchingStashTabs, Converter={StaticResource InvertBoolConverter}}"
                    Click="OnFetchStashTabsButtonClicked" />
        </Grid>
        <!-- Select Tab From List End -->

        <!-- Individual Stash Tab Indices Start -->
        <TextBlock
            Grid.Column="0"
            Grid.Row="5"
            VerticalAlignment="Center"
            Text="Stash Tab Indices:"
            ToolTip="Every stash tab with this indices will be added. Separate them by ',' e.g. '0,1,2,3,4,5' will fetch first 6 stash tabs."
            Visibility="{Binding TabIndicesVisible}" />

        <TextBox
            Grid.Column="1"
            Grid.Row="5"
            Visibility="{Binding TabIndicesVisible}"
            Text="{Binding Settings.StashTabIndices, Mode=TwoWay}" />
        <!-- Individual Stash Tab Indices End -->

        <!-- Individual Stash Tab Name Prefix Start -->
        <TextBlock
            Grid.Column="0"
            Grid.Row="5"
            VerticalAlignment="Center"
            Text="Stash Tab Prefix:"
            ToolTip="Every stash tab which name starts with this prefix will be added."
            Visibility="{Binding TabNamePrefixVisible}" />

        <TextBox
            Grid.Column="1"
            Grid.Row="5"
            Visibility="{Binding TabNamePrefixVisible}"
            Text="{Binding Settings.StashTabPrefix, Mode=TwoWay}" />
        <!-- Individual Stash Tab Name Prefix End -->

        <!-- Individual Stash Tab Name Suffix Start -->
        <TextBlock
            Grid.Column="0"
            Grid.Row="5"
            VerticalAlignment="Center"
            Text="Stash Tab Suffix:"
            ToolTip="Every stash tab which name ends with this suffix will be added."
            Visibility="{Binding TabNameSuffixVisible}" />

        <TextBox
            Grid.Column="1"
            Grid.Row="5"
            Visibility="{Binding TabNameSuffixVisible}"
            Text="{Binding Settings.StashTabSuffix, Mode=TwoWay}" />
        <!-- Individual Stash Tab Name Suffix End -->

        <!-- Fetch on New Map Setting Start -->
        <!-- TODO: [Refactor] Enforce reload when this setting is changed (or at the very least, notify users it's required) -->
        <TextBlock
            Grid.Column="0"
            Grid.Row="6"
            VerticalAlignment="Center"
            Text="Fetch on New Map:"
            ToolTip="Automatically fetches when you join a new Zone (Hideout excluded). REOPEN the overlay to take effect." />

        <CheckBox
            Grid.Column="1"
            Grid.Row="6"
            VerticalAlignment="Center"
            Checked="AutoFetchCheckBox_Checked"
            Unchecked="AutoFetchCheckBox_Unchecked"
            IsChecked="{Binding Settings.AutoFetchOnRezoneEnabled, Mode=TwoWay}" />
        <!-- Fetch on New Map Setting End -->

        <!-- Client Log File Location Setting (Row 13) Start -->
        <!-- TODO: [Refactor] Hide this setting if 'Fetch on New Map' setting isn't enabled -->
        <TextBlock
            Grid.Column="0"
            Grid.Row="7"
            VerticalAlignment="Center"
            Text="PoE Client.txt File Location:"
            Visibility="{Binding FetchOnNewMapEnabled}"
            ToolTip="The standard path is: `C:/Programs/Grinding Gear Games/Path of Exile/logs/Client.txt`; it will be different for steam users." />

        <Button
            x:Name="LogLocationDialog"
            Grid.Column="1"
            Grid.Row="7"
            Click="LogLocationDialog_Click"
            Visibility="{Binding FetchOnNewMapEnabled}"
            ToolTip="{Binding Source={x:Static properties:Settings.Default}, Path=PathOfExileClientLogLocation, Mode=TwoWay}"
            Content="{Binding Source={x:Static properties:Settings.Default}, Path=PathOfExileClientLogLocation, Mode=TwoWay}"
            HorizontalContentAlignment="Left">

            <Button.Style>
                <Style TargetType="Button">
                    <Setter
                        Property="Background"
                        Value="Transparent" />
                    <Style.Triggers>
                        <Trigger
                            Property="IsMouseOver"
                            Value="True">
                            <Setter
                                Property="Background"
                                Value="Transparent" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <!-- Client Log File Location Setting End -->

    </Grid>

</UserControl>